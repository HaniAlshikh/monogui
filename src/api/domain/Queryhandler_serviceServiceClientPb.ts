/**
 * @fileoverview gRPC-Web generated client stub for domain
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.4.2
// 	protoc              v3.21.2
// source: api/domain/queryhandler_service.proto


/* eslint-disable */
// @ts-nocheck


import * as grpcWeb from 'grpc-web';

import * as api_domain_audit_event_pb from '../../api/domain/audit/event_pb';
import * as api_domain_audit_user_pb from '../../api/domain/audit/user_pb';
import * as api_domain_queryhandler_service_pb from '../../api/domain/queryhandler_service_pb';
import * as google_protobuf_wrappers_pb from 'google-protobuf/google/protobuf/wrappers_pb';
import * as google_protobuf_empty_pb from 'google-protobuf/google/protobuf/empty_pb';
import * as api_domain_projections_cluster_pb from '../../api/domain/projections/cluster_pb';
import * as api_domain_projections_tenant_pb from '../../api/domain/projections/tenant_pb';
import * as api_domain_projections_tenant_cluster_binding_pb from '../../api/domain/projections/tenant_cluster_binding_pb';
import * as api_domain_projections_user_pb from '../../api/domain/projections/user_pb';


export class UserClient {
  client_: grpcWeb.AbstractClientBase;
  hostname_: string;
  credentials_: null | { [index: string]: string; };
  options_: null | { [index: string]: any; };

  constructor (hostname: string,
               credentials?: null | { [index: string]: string; },
               options?: null | { [index: string]: any; }) {
    if (!options) options = {};
    if (!credentials) credentials = {};
    options['format'] = 'text';

    this.client_ = new grpcWeb.GrpcWebClientBase(options);
    this.hostname_ = hostname.replace(/\/+$/, '');
    this.credentials_ = credentials;
    this.options_ = options;
  }

  methodDescriptorGetAll = new grpcWeb.MethodDescriptor(
    '/domain.User/GetAll',
    grpcWeb.MethodType.SERVER_STREAMING,
    api_domain_queryhandler_service_pb.GetAllRequest,
    api_domain_projections_user_pb.User,
    (request: api_domain_queryhandler_service_pb.GetAllRequest) => {
      return request.serializeBinary();
    },
    api_domain_projections_user_pb.User.deserializeBinary
  );

  getAll(
    request: api_domain_queryhandler_service_pb.GetAllRequest,
    metadata?: grpcWeb.Metadata): grpcWeb.ClientReadableStream<api_domain_projections_user_pb.User> {
    return this.client_.serverStreaming(
      this.hostname_ +
        '/domain.User/GetAll',
      request,
      metadata || {},
      this.methodDescriptorGetAll);
  }

  methodDescriptorGetById = new grpcWeb.MethodDescriptor(
    '/domain.User/GetById',
    grpcWeb.MethodType.UNARY,
    google_protobuf_wrappers_pb.StringValue,
    api_domain_projections_user_pb.User,
    (request: google_protobuf_wrappers_pb.StringValue) => {
      return request.serializeBinary();
    },
    api_domain_projections_user_pb.User.deserializeBinary
  );

  getById(
    request: google_protobuf_wrappers_pb.StringValue,
    metadata: grpcWeb.Metadata | null): Promise<api_domain_projections_user_pb.User>;

  getById(
    request: google_protobuf_wrappers_pb.StringValue,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: api_domain_projections_user_pb.User) => void): grpcWeb.ClientReadableStream<api_domain_projections_user_pb.User>;

  getById(
    request: google_protobuf_wrappers_pb.StringValue,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: api_domain_projections_user_pb.User) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/domain.User/GetById',
        request,
        metadata || {},
        this.methodDescriptorGetById,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/domain.User/GetById',
    request,
    metadata || {},
    this.methodDescriptorGetById);
  }

  methodDescriptorGetByEmail = new grpcWeb.MethodDescriptor(
    '/domain.User/GetByEmail',
    grpcWeb.MethodType.UNARY,
    google_protobuf_wrappers_pb.StringValue,
    api_domain_projections_user_pb.User,
    (request: google_protobuf_wrappers_pb.StringValue) => {
      return request.serializeBinary();
    },
    api_domain_projections_user_pb.User.deserializeBinary
  );

  getByEmail(
    request: google_protobuf_wrappers_pb.StringValue,
    metadata: grpcWeb.Metadata | null): Promise<api_domain_projections_user_pb.User>;

  getByEmail(
    request: google_protobuf_wrappers_pb.StringValue,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: api_domain_projections_user_pb.User) => void): grpcWeb.ClientReadableStream<api_domain_projections_user_pb.User>;

  getByEmail(
    request: google_protobuf_wrappers_pb.StringValue,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: api_domain_projections_user_pb.User) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/domain.User/GetByEmail',
        request,
        metadata || {},
        this.methodDescriptorGetByEmail,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/domain.User/GetByEmail',
    request,
    metadata || {},
    this.methodDescriptorGetByEmail);
  }

  methodDescriptorGetRoleBindingsById = new grpcWeb.MethodDescriptor(
    '/domain.User/GetRoleBindingsById',
    grpcWeb.MethodType.SERVER_STREAMING,
    google_protobuf_wrappers_pb.StringValue,
    api_domain_projections_user_pb.UserRoleBinding,
    (request: google_protobuf_wrappers_pb.StringValue) => {
      return request.serializeBinary();
    },
    api_domain_projections_user_pb.UserRoleBinding.deserializeBinary
  );

  getRoleBindingsById(
    request: google_protobuf_wrappers_pb.StringValue,
    metadata?: grpcWeb.Metadata): grpcWeb.ClientReadableStream<api_domain_projections_user_pb.UserRoleBinding> {
    return this.client_.serverStreaming(
      this.hostname_ +
        '/domain.User/GetRoleBindingsById',
      request,
      metadata || {},
      this.methodDescriptorGetRoleBindingsById);
  }

  methodDescriptorGetCount = new grpcWeb.MethodDescriptor(
    '/domain.User/GetCount',
    grpcWeb.MethodType.UNARY,
    api_domain_queryhandler_service_pb.GetCountRequest,
    api_domain_queryhandler_service_pb.GetCountResult,
    (request: api_domain_queryhandler_service_pb.GetCountRequest) => {
      return request.serializeBinary();
    },
    api_domain_queryhandler_service_pb.GetCountResult.deserializeBinary
  );

  getCount(
    request: api_domain_queryhandler_service_pb.GetCountRequest,
    metadata: grpcWeb.Metadata | null): Promise<api_domain_queryhandler_service_pb.GetCountResult>;

  getCount(
    request: api_domain_queryhandler_service_pb.GetCountRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: api_domain_queryhandler_service_pb.GetCountResult) => void): grpcWeb.ClientReadableStream<api_domain_queryhandler_service_pb.GetCountResult>;

  getCount(
    request: api_domain_queryhandler_service_pb.GetCountRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: api_domain_queryhandler_service_pb.GetCountResult) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/domain.User/GetCount',
        request,
        metadata || {},
        this.methodDescriptorGetCount,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/domain.User/GetCount',
    request,
    metadata || {},
    this.methodDescriptorGetCount);
  }

}

export class TenantClient {
  client_: grpcWeb.AbstractClientBase;
  hostname_: string;
  credentials_: null | { [index: string]: string; };
  options_: null | { [index: string]: any; };

  constructor (hostname: string,
               credentials?: null | { [index: string]: string; },
               options?: null | { [index: string]: any; }) {
    if (!options) options = {};
    if (!credentials) credentials = {};
    options['format'] = 'text';

    this.client_ = new grpcWeb.GrpcWebClientBase(options);
    this.hostname_ = hostname.replace(/\/+$/, '');
    this.credentials_ = credentials;
    this.options_ = options;
  }

  methodDescriptorGetAll = new grpcWeb.MethodDescriptor(
    '/domain.Tenant/GetAll',
    grpcWeb.MethodType.SERVER_STREAMING,
    api_domain_queryhandler_service_pb.GetAllRequest,
    api_domain_projections_tenant_pb.Tenant,
    (request: api_domain_queryhandler_service_pb.GetAllRequest) => {
      return request.serializeBinary();
    },
    api_domain_projections_tenant_pb.Tenant.deserializeBinary
  );

  getAll(
    request: api_domain_queryhandler_service_pb.GetAllRequest,
    metadata?: grpcWeb.Metadata): grpcWeb.ClientReadableStream<api_domain_projections_tenant_pb.Tenant> {
    return this.client_.serverStreaming(
      this.hostname_ +
        '/domain.Tenant/GetAll',
      request,
      metadata || {},
      this.methodDescriptorGetAll);
  }

  methodDescriptorGetById = new grpcWeb.MethodDescriptor(
    '/domain.Tenant/GetById',
    grpcWeb.MethodType.UNARY,
    google_protobuf_wrappers_pb.StringValue,
    api_domain_projections_tenant_pb.Tenant,
    (request: google_protobuf_wrappers_pb.StringValue) => {
      return request.serializeBinary();
    },
    api_domain_projections_tenant_pb.Tenant.deserializeBinary
  );

  getById(
    request: google_protobuf_wrappers_pb.StringValue,
    metadata: grpcWeb.Metadata | null): Promise<api_domain_projections_tenant_pb.Tenant>;

  getById(
    request: google_protobuf_wrappers_pb.StringValue,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: api_domain_projections_tenant_pb.Tenant) => void): grpcWeb.ClientReadableStream<api_domain_projections_tenant_pb.Tenant>;

  getById(
    request: google_protobuf_wrappers_pb.StringValue,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: api_domain_projections_tenant_pb.Tenant) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/domain.Tenant/GetById',
        request,
        metadata || {},
        this.methodDescriptorGetById,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/domain.Tenant/GetById',
    request,
    metadata || {},
    this.methodDescriptorGetById);
  }

  methodDescriptorGetByName = new grpcWeb.MethodDescriptor(
    '/domain.Tenant/GetByName',
    grpcWeb.MethodType.UNARY,
    google_protobuf_wrappers_pb.StringValue,
    api_domain_projections_tenant_pb.Tenant,
    (request: google_protobuf_wrappers_pb.StringValue) => {
      return request.serializeBinary();
    },
    api_domain_projections_tenant_pb.Tenant.deserializeBinary
  );

  getByName(
    request: google_protobuf_wrappers_pb.StringValue,
    metadata: grpcWeb.Metadata | null): Promise<api_domain_projections_tenant_pb.Tenant>;

  getByName(
    request: google_protobuf_wrappers_pb.StringValue,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: api_domain_projections_tenant_pb.Tenant) => void): grpcWeb.ClientReadableStream<api_domain_projections_tenant_pb.Tenant>;

  getByName(
    request: google_protobuf_wrappers_pb.StringValue,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: api_domain_projections_tenant_pb.Tenant) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/domain.Tenant/GetByName',
        request,
        metadata || {},
        this.methodDescriptorGetByName,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/domain.Tenant/GetByName',
    request,
    metadata || {},
    this.methodDescriptorGetByName);
  }

  methodDescriptorGetUsers = new grpcWeb.MethodDescriptor(
    '/domain.Tenant/GetUsers',
    grpcWeb.MethodType.SERVER_STREAMING,
    google_protobuf_wrappers_pb.StringValue,
    api_domain_projections_tenant_pb.TenantUser,
    (request: google_protobuf_wrappers_pb.StringValue) => {
      return request.serializeBinary();
    },
    api_domain_projections_tenant_pb.TenantUser.deserializeBinary
  );

  getUsers(
    request: google_protobuf_wrappers_pb.StringValue,
    metadata?: grpcWeb.Metadata): grpcWeb.ClientReadableStream<api_domain_projections_tenant_pb.TenantUser> {
    return this.client_.serverStreaming(
      this.hostname_ +
        '/domain.Tenant/GetUsers',
      request,
      metadata || {},
      this.methodDescriptorGetUsers);
  }

}

export class ClusterClient {
  client_: grpcWeb.AbstractClientBase;
  hostname_: string;
  credentials_: null | { [index: string]: string; };
  options_: null | { [index: string]: any; };

  constructor (hostname: string,
               credentials?: null | { [index: string]: string; },
               options?: null | { [index: string]: any; }) {
    if (!options) options = {};
    if (!credentials) credentials = {};
    options['format'] = 'text';

    this.client_ = new grpcWeb.GrpcWebClientBase(options);
    this.hostname_ = hostname.replace(/\/+$/, '');
    this.credentials_ = credentials;
    this.options_ = options;
  }

  methodDescriptorGetAll = new grpcWeb.MethodDescriptor(
    '/domain.Cluster/GetAll',
    grpcWeb.MethodType.SERVER_STREAMING,
    api_domain_queryhandler_service_pb.GetAllRequest,
    api_domain_projections_cluster_pb.Cluster,
    (request: api_domain_queryhandler_service_pb.GetAllRequest) => {
      return request.serializeBinary();
    },
    api_domain_projections_cluster_pb.Cluster.deserializeBinary
  );

  getAll(
    request: api_domain_queryhandler_service_pb.GetAllRequest,
    metadata?: grpcWeb.Metadata): grpcWeb.ClientReadableStream<api_domain_projections_cluster_pb.Cluster> {
    return this.client_.serverStreaming(
      this.hostname_ +
        '/domain.Cluster/GetAll',
      request,
      metadata || {},
      this.methodDescriptorGetAll);
  }

  methodDescriptorGetById = new grpcWeb.MethodDescriptor(
    '/domain.Cluster/GetById',
    grpcWeb.MethodType.UNARY,
    google_protobuf_wrappers_pb.StringValue,
    api_domain_projections_cluster_pb.Cluster,
    (request: google_protobuf_wrappers_pb.StringValue) => {
      return request.serializeBinary();
    },
    api_domain_projections_cluster_pb.Cluster.deserializeBinary
  );

  getById(
    request: google_protobuf_wrappers_pb.StringValue,
    metadata: grpcWeb.Metadata | null): Promise<api_domain_projections_cluster_pb.Cluster>;

  getById(
    request: google_protobuf_wrappers_pb.StringValue,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: api_domain_projections_cluster_pb.Cluster) => void): grpcWeb.ClientReadableStream<api_domain_projections_cluster_pb.Cluster>;

  getById(
    request: google_protobuf_wrappers_pb.StringValue,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: api_domain_projections_cluster_pb.Cluster) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/domain.Cluster/GetById',
        request,
        metadata || {},
        this.methodDescriptorGetById,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/domain.Cluster/GetById',
    request,
    metadata || {},
    this.methodDescriptorGetById);
  }

  methodDescriptorGetByName = new grpcWeb.MethodDescriptor(
    '/domain.Cluster/GetByName',
    grpcWeb.MethodType.UNARY,
    google_protobuf_wrappers_pb.StringValue,
    api_domain_projections_cluster_pb.Cluster,
    (request: google_protobuf_wrappers_pb.StringValue) => {
      return request.serializeBinary();
    },
    api_domain_projections_cluster_pb.Cluster.deserializeBinary
  );

  getByName(
    request: google_protobuf_wrappers_pb.StringValue,
    metadata: grpcWeb.Metadata | null): Promise<api_domain_projections_cluster_pb.Cluster>;

  getByName(
    request: google_protobuf_wrappers_pb.StringValue,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: api_domain_projections_cluster_pb.Cluster) => void): grpcWeb.ClientReadableStream<api_domain_projections_cluster_pb.Cluster>;

  getByName(
    request: google_protobuf_wrappers_pb.StringValue,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: api_domain_projections_cluster_pb.Cluster) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/domain.Cluster/GetByName',
        request,
        metadata || {},
        this.methodDescriptorGetByName,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/domain.Cluster/GetByName',
    request,
    metadata || {},
    this.methodDescriptorGetByName);
  }

}

export class ClusterAccessClient {
  client_: grpcWeb.AbstractClientBase;
  hostname_: string;
  credentials_: null | { [index: string]: string; };
  options_: null | { [index: string]: any; };

  constructor (hostname: string,
               credentials?: null | { [index: string]: string; },
               options?: null | { [index: string]: any; }) {
    if (!options) options = {};
    if (!credentials) credentials = {};
    options['format'] = 'text';

    this.client_ = new grpcWeb.GrpcWebClientBase(options);
    this.hostname_ = hostname.replace(/\/+$/, '');
    this.credentials_ = credentials;
    this.options_ = options;
  }

  methodDescriptorGetClusterAccess = new grpcWeb.MethodDescriptor(
    '/domain.ClusterAccess/GetClusterAccess',
    grpcWeb.MethodType.SERVER_STREAMING,
    google_protobuf_empty_pb.Empty,
    api_domain_projections_cluster_pb.ClusterAccess,
    (request: google_protobuf_empty_pb.Empty) => {
      return request.serializeBinary();
    },
    api_domain_projections_cluster_pb.ClusterAccess.deserializeBinary
  );

  getClusterAccess(
    request: google_protobuf_empty_pb.Empty,
    metadata?: grpcWeb.Metadata): grpcWeb.ClientReadableStream<api_domain_projections_cluster_pb.ClusterAccess> {
    return this.client_.serverStreaming(
      this.hostname_ +
        '/domain.ClusterAccess/GetClusterAccess',
      request,
      metadata || {},
      this.methodDescriptorGetClusterAccess);
  }

  methodDescriptorGetClusterAccessV2 = new grpcWeb.MethodDescriptor(
    '/domain.ClusterAccess/GetClusterAccessV2',
    grpcWeb.MethodType.SERVER_STREAMING,
    google_protobuf_empty_pb.Empty,
    api_domain_projections_cluster_pb.ClusterAccessV2,
    (request: google_protobuf_empty_pb.Empty) => {
      return request.serializeBinary();
    },
    api_domain_projections_cluster_pb.ClusterAccessV2.deserializeBinary
  );

  getClusterAccessV2(
    request: google_protobuf_empty_pb.Empty,
    metadata?: grpcWeb.Metadata): grpcWeb.ClientReadableStream<api_domain_projections_cluster_pb.ClusterAccessV2> {
    return this.client_.serverStreaming(
      this.hostname_ +
        '/domain.ClusterAccess/GetClusterAccessV2',
      request,
      metadata || {},
      this.methodDescriptorGetClusterAccessV2);
  }

  methodDescriptorGetTenantClusterMappingsByTenantId = new grpcWeb.MethodDescriptor(
    '/domain.ClusterAccess/GetTenantClusterMappingsByTenantId',
    grpcWeb.MethodType.SERVER_STREAMING,
    google_protobuf_wrappers_pb.StringValue,
    api_domain_projections_tenant_cluster_binding_pb.TenantClusterBinding,
    (request: google_protobuf_wrappers_pb.StringValue) => {
      return request.serializeBinary();
    },
    api_domain_projections_tenant_cluster_binding_pb.TenantClusterBinding.deserializeBinary
  );

  getTenantClusterMappingsByTenantId(
    request: google_protobuf_wrappers_pb.StringValue,
    metadata?: grpcWeb.Metadata): grpcWeb.ClientReadableStream<api_domain_projections_tenant_cluster_binding_pb.TenantClusterBinding> {
    return this.client_.serverStreaming(
      this.hostname_ +
        '/domain.ClusterAccess/GetTenantClusterMappingsByTenantId',
      request,
      metadata || {},
      this.methodDescriptorGetTenantClusterMappingsByTenantId);
  }

  methodDescriptorGetTenantClusterMappingsByClusterId = new grpcWeb.MethodDescriptor(
    '/domain.ClusterAccess/GetTenantClusterMappingsByClusterId',
    grpcWeb.MethodType.SERVER_STREAMING,
    google_protobuf_wrappers_pb.StringValue,
    api_domain_projections_tenant_cluster_binding_pb.TenantClusterBinding,
    (request: google_protobuf_wrappers_pb.StringValue) => {
      return request.serializeBinary();
    },
    api_domain_projections_tenant_cluster_binding_pb.TenantClusterBinding.deserializeBinary
  );

  getTenantClusterMappingsByClusterId(
    request: google_protobuf_wrappers_pb.StringValue,
    metadata?: grpcWeb.Metadata): grpcWeb.ClientReadableStream<api_domain_projections_tenant_cluster_binding_pb.TenantClusterBinding> {
    return this.client_.serverStreaming(
      this.hostname_ +
        '/domain.ClusterAccess/GetTenantClusterMappingsByClusterId',
      request,
      metadata || {},
      this.methodDescriptorGetTenantClusterMappingsByClusterId);
  }

  methodDescriptorGetTenantClusterMappingByTenantAndClusterId = new grpcWeb.MethodDescriptor(
    '/domain.ClusterAccess/GetTenantClusterMappingByTenantAndClusterId',
    grpcWeb.MethodType.UNARY,
    api_domain_queryhandler_service_pb.GetClusterMappingRequest,
    api_domain_projections_tenant_cluster_binding_pb.TenantClusterBinding,
    (request: api_domain_queryhandler_service_pb.GetClusterMappingRequest) => {
      return request.serializeBinary();
    },
    api_domain_projections_tenant_cluster_binding_pb.TenantClusterBinding.deserializeBinary
  );

  getTenantClusterMappingByTenantAndClusterId(
    request: api_domain_queryhandler_service_pb.GetClusterMappingRequest,
    metadata: grpcWeb.Metadata | null): Promise<api_domain_projections_tenant_cluster_binding_pb.TenantClusterBinding>;

  getTenantClusterMappingByTenantAndClusterId(
    request: api_domain_queryhandler_service_pb.GetClusterMappingRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: api_domain_projections_tenant_cluster_binding_pb.TenantClusterBinding) => void): grpcWeb.ClientReadableStream<api_domain_projections_tenant_cluster_binding_pb.TenantClusterBinding>;

  getTenantClusterMappingByTenantAndClusterId(
    request: api_domain_queryhandler_service_pb.GetClusterMappingRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: api_domain_projections_tenant_cluster_binding_pb.TenantClusterBinding) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/domain.ClusterAccess/GetTenantClusterMappingByTenantAndClusterId',
        request,
        metadata || {},
        this.methodDescriptorGetTenantClusterMappingByTenantAndClusterId,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/domain.ClusterAccess/GetTenantClusterMappingByTenantAndClusterId',
    request,
    metadata || {},
    this.methodDescriptorGetTenantClusterMappingByTenantAndClusterId);
  }

}

export class AuditLogClient {
  client_: grpcWeb.AbstractClientBase;
  hostname_: string;
  credentials_: null | { [index: string]: string; };
  options_: null | { [index: string]: any; };

  constructor (hostname: string,
               credentials?: null | { [index: string]: string; },
               options?: null | { [index: string]: any; }) {
    if (!options) options = {};
    if (!credentials) credentials = {};
    options['format'] = 'text';

    this.client_ = new grpcWeb.GrpcWebClientBase(options);
    this.hostname_ = hostname.replace(/\/+$/, '');
    this.credentials_ = credentials;
    this.options_ = options;
  }

  methodDescriptorGetByDateRange = new grpcWeb.MethodDescriptor(
    '/domain.AuditLog/GetByDateRange',
    grpcWeb.MethodType.SERVER_STREAMING,
    api_domain_queryhandler_service_pb.GetAuditLogByDateRangeRequest,
    api_domain_audit_event_pb.HumanReadableEvent,
    (request: api_domain_queryhandler_service_pb.GetAuditLogByDateRangeRequest) => {
      return request.serializeBinary();
    },
    api_domain_audit_event_pb.HumanReadableEvent.deserializeBinary
  );

  getByDateRange(
    request: api_domain_queryhandler_service_pb.GetAuditLogByDateRangeRequest,
    metadata?: grpcWeb.Metadata): grpcWeb.ClientReadableStream<api_domain_audit_event_pb.HumanReadableEvent> {
    return this.client_.serverStreaming(
      this.hostname_ +
        '/domain.AuditLog/GetByDateRange',
      request,
      metadata || {},
      this.methodDescriptorGetByDateRange);
  }

  methodDescriptorGetByUser = new grpcWeb.MethodDescriptor(
    '/domain.AuditLog/GetByUser',
    grpcWeb.MethodType.SERVER_STREAMING,
    api_domain_queryhandler_service_pb.GetByUserRequest,
    api_domain_audit_event_pb.HumanReadableEvent,
    (request: api_domain_queryhandler_service_pb.GetByUserRequest) => {
      return request.serializeBinary();
    },
    api_domain_audit_event_pb.HumanReadableEvent.deserializeBinary
  );

  getByUser(
    request: api_domain_queryhandler_service_pb.GetByUserRequest,
    metadata?: grpcWeb.Metadata): grpcWeb.ClientReadableStream<api_domain_audit_event_pb.HumanReadableEvent> {
    return this.client_.serverStreaming(
      this.hostname_ +
        '/domain.AuditLog/GetByUser',
      request,
      metadata || {},
      this.methodDescriptorGetByUser);
  }

  methodDescriptorGetUserActions = new grpcWeb.MethodDescriptor(
    '/domain.AuditLog/GetUserActions',
    grpcWeb.MethodType.SERVER_STREAMING,
    api_domain_queryhandler_service_pb.GetUserActionsRequest,
    api_domain_audit_event_pb.HumanReadableEvent,
    (request: api_domain_queryhandler_service_pb.GetUserActionsRequest) => {
      return request.serializeBinary();
    },
    api_domain_audit_event_pb.HumanReadableEvent.deserializeBinary
  );

  getUserActions(
    request: api_domain_queryhandler_service_pb.GetUserActionsRequest,
    metadata?: grpcWeb.Metadata): grpcWeb.ClientReadableStream<api_domain_audit_event_pb.HumanReadableEvent> {
    return this.client_.serverStreaming(
      this.hostname_ +
        '/domain.AuditLog/GetUserActions',
      request,
      metadata || {},
      this.methodDescriptorGetUserActions);
  }

  methodDescriptorGetUsersOverview = new grpcWeb.MethodDescriptor(
    '/domain.AuditLog/GetUsersOverview',
    grpcWeb.MethodType.SERVER_STREAMING,
    api_domain_queryhandler_service_pb.GetUsersOverviewRequest,
    api_domain_audit_user_pb.UserOverview,
    (request: api_domain_queryhandler_service_pb.GetUsersOverviewRequest) => {
      return request.serializeBinary();
    },
    api_domain_audit_user_pb.UserOverview.deserializeBinary
  );

  getUsersOverview(
    request: api_domain_queryhandler_service_pb.GetUsersOverviewRequest,
    metadata?: grpcWeb.Metadata): grpcWeb.ClientReadableStream<api_domain_audit_user_pb.UserOverview> {
    return this.client_.serverStreaming(
      this.hostname_ +
        '/domain.AuditLog/GetUsersOverview',
      request,
      metadata || {},
      this.methodDescriptorGetUsersOverview);
  }

}

export class K8sAuthZClient {
  client_: grpcWeb.AbstractClientBase;
  hostname_: string;
  credentials_: null | { [index: string]: string; };
  options_: null | { [index: string]: any; };

  constructor (hostname: string,
               credentials?: null | { [index: string]: string; },
               options?: null | { [index: string]: any; }) {
    if (!options) options = {};
    if (!credentials) credentials = {};
    options['format'] = 'text';

    this.client_ = new grpcWeb.GrpcWebClientBase(options);
    this.hostname_ = hostname.replace(/\/+$/, '');
    this.credentials_ = credentials;
    this.options_ = options;
  }

  methodDescriptorGetAll = new grpcWeb.MethodDescriptor(
    '/domain.K8sAuthZ/GetAll',
    grpcWeb.MethodType.SERVER_STREAMING,
    google_protobuf_empty_pb.Empty,
    google_protobuf_wrappers_pb.BytesValue,
    (request: google_protobuf_empty_pb.Empty) => {
      return request.serializeBinary();
    },
    google_protobuf_wrappers_pb.BytesValue.deserializeBinary
  );

  getAll(
    request: google_protobuf_empty_pb.Empty,
    metadata?: grpcWeb.Metadata): grpcWeb.ClientReadableStream<google_protobuf_wrappers_pb.BytesValue> {
    return this.client_.serverStreaming(
      this.hostname_ +
        '/domain.K8sAuthZ/GetAll',
      request,
      metadata || {},
      this.methodDescriptorGetAll);
  }

  methodDescriptorGetByClusterId = new grpcWeb.MethodDescriptor(
    '/domain.K8sAuthZ/GetByClusterId',
    grpcWeb.MethodType.SERVER_STREAMING,
    google_protobuf_wrappers_pb.StringValue,
    google_protobuf_wrappers_pb.BytesValue,
    (request: google_protobuf_wrappers_pb.StringValue) => {
      return request.serializeBinary();
    },
    google_protobuf_wrappers_pb.BytesValue.deserializeBinary
  );

  getByClusterId(
    request: google_protobuf_wrappers_pb.StringValue,
    metadata?: grpcWeb.Metadata): grpcWeb.ClientReadableStream<google_protobuf_wrappers_pb.BytesValue> {
    return this.client_.serverStreaming(
      this.hostname_ +
        '/domain.K8sAuthZ/GetByClusterId',
      request,
      metadata || {},
      this.methodDescriptorGetByClusterId);
  }

}

