# Default values for monogui

nameOverride: ""
fullnameOverride: ""

replicaCount: 1

imagePullSecrets: [ ]

image:
  repository: ghcr.io/hanialshikh/monogui/monogui
  pullPolicy: Always
  # -- Overrides the image tag whose default is the chart appVersion.
  tag: ""

monoskope:
  # -- API address of monoskope
  api: ""

podAnnotations: { }

podSecurityContext:
  { }
# fsGroup: 2000

securityContext:
  { }
# capabilities:
#   drop:
#   - ALL
# readOnlyRootFilesystem: true
# runAsNonRoot: true
# runAsUser: 1000

service:
  type: ClusterIP

ingress:
  # -- Enables the ingress object.
  enabled: false
  # -- From Kubernetes 1.18+ this field is supported in case your ingress controller supports it. When set, you do not need to add the ingress class as annotation.
  ingressClassName:
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: monogui.dev
      paths:
        - path: /
          type: ImplementationSpecific

  tls: []
  #  - secretName: monogui-tls
  #    hosts:
  #      - monogui.dev

resources:
  { }
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
# lines, adjust them as necessary, and remove the curly braces after 'resources:'.
# limits:
#   cpu: 100m
#   memory: 128Mi
# requests:
#   cpu: 100m
#   memory: 128Mi

livenessProbe:
  enabled: true
  failureThreshold: 10
  periodSeconds: 5
  initialDelaySeconds: 10

readinessProbe:
  enabled: true
  failureThreshold: 5
  periodSeconds: 5
  initialDelaySeconds: 10

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 10
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: { }

tolerations: [ ]

affinity: { }

labels:
  { }
# app.kubernetes.io/part-of: my-app